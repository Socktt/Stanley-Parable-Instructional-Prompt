make --dry-run --keep-going --print-directory
make: Entering directory '/home/socktt/programming/stanleyParableInstructionalPrompt'
nasm -f bin boot.asm -o boot.bin
nasm -f bin empty_end.asm -o empty_end.bin
nasm -f elf kernel_entry.asm -o kernel_entry.o
nasm -f elf isr.asm -o isr.o
nasm -f elf irq.asm -o irq.o
i686-elf-gcc -ffreestanding -m32 -g -c -w "kernel.c" -o "kernel.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "gdt.c" -o "gdt.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "idt.c" -o "idt.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "isr.c" -o "isrc.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "irq.c" -o "irqc.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "tss.c" -o "tss.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "timer.c" -o "timer.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "kb.c" -o "kb.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "port_io.c" -o "port_io.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "vga.c" -o "vga.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "system.c" -o "system.o"
i686-elf-gcc -ffreestanding -m32 -g -c -w "prompt.c" -o "prompt.o"
i686-elf-ld -o "full_kernel.bin" kernel_entry.o kernel.o gdt.o idt.o isr.o isrc.o irq.o irqc.o tss.o timer.o kb.o port_io.o vga.o system.o prompt.o -Ttext 0x1000 --oformat binary
cat "boot.bin" "full_kernel.bin" "empty_end.bin" > "instructionalPrompt.bin"
qemu-system-x86_64 instructionalPrompt.bin
# bochs -f bochs.cfg
make: Leaving directory '/home/socktt/programming/stanleyParableInstructionalPrompt'
 
